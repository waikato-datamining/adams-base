# Project: adams
# Date: 2023-12-04 13:39:30
# User: fracpete
# Charset: UTF-8
# Modules: adams-core,adams-matlab,adams-spreadsheet
#
adams.flow.control.Flow -annotation "Allows to inspect .mat files.\\nHandles regular arrays and structs (one level only)." -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.TabView -display-type adams.flow.core.displaytype.Default -width 1200 -height 800
  adams.flow.sink.DisplayPanelManager -name Array -short-title true -display-type adams.flow.core.displaytype.Default -provider "adams.flow.sink.SpreadSheetDisplay -display-type adams.flow.core.displaytype.Default -cell-rendering-customizer \"adams.gui.core.spreadsheettable.HeatmapCellRenderingCustomizer -background-color-generator \\\"adams.gui.visualization.core.BiColorGenerator -first-color #ffffff -second-color #ff0000\\\"\" -writer adams.data.io.output.NullWriter -preview adams.gui.core.spreadsheetpreview.NullPreview" -entry-name-variable entryname -allow-search true
  adams.flow.sink.HistoryDisplay -name Info -display-type adams.flow.core.displaytype.Default -entry-name-variable entryname
 adams.flow.standalone.SetVariable -name "restore file" -var-name restore -var-value @{flow_filename_long}.props -value-type FILE_FORWARD_SLASHES -expand-value true
 adams.flow.source.SelectFile -file-chooser-title "Select Matlab file" -extension .mat -restoration-enabled true -restoration-file @{restore}
 adams.flow.transformer.Mat5FileReader
 adams.flow.transformer.SetStorageValue -storage-name mat
 adams.flow.transformer.Mat5FileInfo -output-array true -type ENTRY_NAMES
 adams.flow.transformer.SelectArraySubset -name "Select elements to display" -short-title true
 adams.flow.transformer.ArrayToSequence
 adams.flow.transformer.SetVariable -var-name entry
 adams.flow.control.Trigger -name "display entry"
  adams.flow.source.StorageValue -storage-name mat -conversion adams.data.conversion.UnknownToUnknown
  adams.flow.transformer.Mat5FileGetArray -entry-name @{entry}
  adams.flow.control.Tee -name info
   adams.flow.transformer.Mat5ArrayInfo -type ALL
   adams.flow.transformer.Convert -conversion "adams.data.conversion.MapToString -sort-keys true"
   adams.flow.transformer.SetStorageValue -storage-name info
  adams.flow.transformer.SetStorageValue -storage-name entry
  adams.flow.control.IfThenElse -condition adams.flow.condition.bool.IsMat5Struct
   adams.flow.control.Sequence -name then
    adams.flow.control.Tee -name "# dimensions"
     adams.flow.transformer.Mat5ArrayInfo -type STR_DIMENSIONS
     adams.flow.transformer.SetVariable -var-name dims
    adams.flow.control.ConditionalTrigger -name "output only specific element?" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{dims}\\\\\\\" != \\\\\\\"1x1\\\\\\\"\""
     adams.flow.standalone.SetVariable -name reset -var-name index -var-value ""
     adams.flow.source.EnterValue -message "Multi-dim. struct (@{dims}). Retrieve one element (0-based index; use \\\\\\\\\\\\\\\';\\\\\\\\\\\\\\\' to separate dims) or all (empty string)?"
     adams.flow.transformer.SetVariable -var-name index
    adams.flow.transformer.Convert -conversion "adams.data.conversion.Mat5StructToMap -index @{index} -zero-based-index true"
    adams.flow.transformer.GetMapKeys -output-array true
    adams.flow.transformer.SelectArraySubset -allow-search true
    adams.flow.transformer.ArrayToSequence
    adams.flow.transformer.SetVariable -var-name field
    adams.flow.control.Trigger -name "display field"
     adams.flow.source.StorageValue -storage-name entry -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.Convert -conversion adams.data.conversion.Mat5StructToMap
     adams.flow.transformer.GetMapValue -key @{field}
     adams.flow.transformer.Convert -name "Convert (2)" -conversion adams.data.conversion.Mat5ArrayToSpreadSheet
     adams.flow.transformer.SetVariable -var-name entryname -var-value @{entry}/@{field} -expand-value true
     adams.flow.control.Trigger -name info
      adams.flow.source.StorageValue -storage-name info -conversion adams.data.conversion.UnknownToUnknown
      adams.flow.sink.CallableSink -callable Info
     adams.flow.sink.CallableSink -callable Array
   adams.flow.control.Sequence -name else
    adams.flow.transformer.SetVariable -var-name entryname -var-value @{entry}
    adams.flow.control.Trigger -name info
     adams.flow.source.StorageValue -storage-name info -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.sink.CallableSink -callable Info
    adams.flow.control.Tee -name "# dimensions"
     adams.flow.transformer.Mat5ArrayInfo
     adams.flow.transformer.SetVariable -var-name num_dims
    adams.flow.control.ConditionalTrigger -name "prompt of index" -condition "adams.flow.condition.bool.Expression -expression \"@{num_dims} > 2\""
     adams.flow.standalone.SetVariable -name reset -var-name index -var-value ""
     adams.flow.source.EnterValue -message "Index of matrix to retrieve (@{num_dims} dims, format: DIM1;DIM2;..., iterates over empty dims)" -initial-value ;;0
     adams.flow.transformer.SetVariable -var-name index
    adams.flow.control.ConditionalTee -name "can we display?" -condition "adams.flow.condition.bool.Expression -expression \"(@{num_dims} <= 2) or (\\\\\\\"@{index}\\\\\\\" != \\\\\\\"\\\\\\\")\""
     adams.flow.control.ConditionalSubProcess -name "create subset" -condition "adams.flow.condition.bool.Expression -expression \"@{num_dims} > 2\""
      adams.flow.transformer.Mat5ArraySubset -index @{index}
     adams.flow.transformer.Convert -conversion adams.data.conversion.Mat5ArrayToSpreadSheet
     adams.flow.sink.CallableSink -callable Array