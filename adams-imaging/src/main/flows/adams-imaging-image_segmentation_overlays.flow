# Project: adams
# Date: 2023-06-29 14:37:57
# User: fracpete
# Charset: UTF-8
# Modules: adams-core,adams-imaging,adams-json,adams-spreadsheet,adams-xml
#
adams.flow.control.Flow -annotation "Overlays image segmentation annotations over images and saves the combined images." -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.sink.ProgressBar -display-type adams.flow.core.displaytype.Default -writer adams.gui.print.NullWriter -max @{max}
 adams.flow.source.Start
 adams.flow.control.Trigger -name "prompt user"
  adams.flow.standalone.SetVariable -name "restore file" -var-name restore -var-value @{flow_filename_long}.props -value-type FILE_FORWARD_SLASHES -expand-value true
  adams.flow.source.EnterManyValues -name Parameters -stop-if-canceled true -value "adams.flow.source.valuedefinition.DirectoryValueDefinition -name image_dir -display \"Image dir\" -help \"the directory with the images\" -file-chooser-title \"Image dir\" -use-forward-slashes true -use-absolute-path true" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name separate_annotations_dir -display \"Separate annotations dir?\" -help \"whether the annotations are located in a separated directory\" -type BOOLEAN -default-value false" -value "adams.flow.source.valuedefinition.DirectoryValueDefinition -name annotation_dir -display \"Annotation dir\" -help \"the directory with the annotations\" -file-chooser-title \"Annotation dir\" -use-forward-slashes true -use-absolute-path true" -value "adams.flow.source.valuedefinition.ListSelectionValueDefinition -name annotation_format -display \"Annotation format\" -help \"the format of the annotations\" -value bluechannel -value grayscale -value indexed_png -value individual_layers -default-value bluechannel" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name skip_first_layer -display \"Skip first layer?\" -type BOOLEAN -default-value false" -value "adams.flow.source.valuedefinition.GOEValueDefinition -name color_provider -display \"Color provider\" -help \"generates the colors for the overlays\" -super-class adams.gui.visualization.core.ColorProvider -default-class adams.gui.visualization.core.DefaultColorProvider" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name alpha -display Alpha -help \"the transparency level (0: transparent, 255: opaque)\" -type INTEGER -default-value 128" -value "adams.flow.source.valuedefinition.DirectoryValueDefinition -name output_dir -display \"Output dir\" -help \"the directory to store the combined images in\" -file-chooser-title \"Output dir\" -use-forward-slashes true -use-absolute-path true" -output-type MAP -restoration-enabled true -restoration-file @{restore}
  adams.flow.transformer.MapToVariables
 adams.flow.control.Trigger -name process
  adams.flow.standalone.SetVariable -name reset -var-name count -var-value 0
  adams.flow.source.FileSystemSearch -output-array true -search "adams.flow.source.filesystemsearch.LocalFileSearch -directory @{image_dir} -regexp .*\\\\.jpg -sorting SORT_BY_NAME" -use-forward-slashes true
  adams.flow.control.Tee -name "# files"
   adams.flow.transformer.ArrayLength
   adams.flow.transformer.SetVariable -var-name max
  adams.flow.transformer.ArrayToSequence
  adams.flow.control.Tee -name progress
   adams.flow.transformer.IncVariable -var-name count -output-variable-value true
   adams.flow.sink.CallableSink -callable ProgressBar
  adams.flow.control.Tee -name "output file"
   adams.flow.transformer.BaseName
   adams.flow.transformer.PrependDir -prefix @{output_dir} -use-forward-slashes true
   adams.flow.transformer.SetVariable -var-name out_file
  adams.flow.control.Switch -condition "adams.flow.condition.bool.HasVariableValue -variable-name annotation_format -value bluechannel" -condition "adams.flow.condition.bool.HasVariableValue -variable-name annotation_format -value grayscale" -condition "adams.flow.condition.bool.HasVariableValue -variable-name annotation_format -value indexed_png" -condition "adams.flow.condition.bool.HasVariableValue -variable-name annotation_format -value individual_layers" -condition adams.flow.condition.bool.True
   adams.flow.transformer.ImageSegmentationFileReader -name bluechannel -reader "adams.data.io.input.BlueChannelImageSegmentationReader -skip-first-layer @{skip_first_layer} -reader \"adams.data.io.input.PNGImageReader -color-provider adams.gui.visualization.core.DefaultColorProvider\""
   adams.flow.transformer.ImageSegmentationFileReader -name grayscale -reader "adams.data.io.input.GrayscaleImageSegmentationReader -skip-first-layer @{skip_first_layer} -reader \"adams.data.io.input.PNGImageReader -color-provider adams.gui.visualization.core.DefaultColorProvider\""
   adams.flow.transformer.ImageSegmentationFileReader -name indexed_png -reader "adams.data.io.input.IndexedPNGImageSegmentationReader -skip-first-layer @{skip_first_layer}"
   adams.flow.transformer.ImageSegmentationFileReader -name individual_layers -reader "adams.data.io.input.IndividualImageSegmentationLayerReader -layer-transformer adams.data.image.transformer.PassThrough"
   adams.flow.control.Stop -stop-msg "Unhandled annotation format: @{annotation_format}"
  adams.flow.transformer.SequenceToArray
  adams.flow.transformer.ImageSegmentationContainerOperation -operation "adams.data.imagesegmentation.operation.SimpleOverlay -color-provider @{color_provider} -alpha @{alpha}"
  adams.flow.sink.ImageFileWriter -output @{out_file} -writer adams.data.io.output.JAIImageWriter
 adams.flow.control.CloseCallableDisplay -callable ProgressBar