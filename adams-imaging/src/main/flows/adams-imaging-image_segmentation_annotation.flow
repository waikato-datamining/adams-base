# Project: adams
# Date: 2023-10-26 14:28:58
# User: fracpete
# Charset: UTF-8
# Modules: adams-core,adams-imaging,adams-json,adams-spreadsheet,adams-xml
#
adams.flow.control.Flow -annotation "Allows the user to annotate JPG/PNG images for image segmentation.\\nSeveral file formats are available:\\n- bluechannel\\n- grayscale\\n- indexed PNG\\n- individual layers (as is or replacing the dominant color with black)\\nWhereas the first two store all layers in a single PNG file, the latter \\nstores them as binary PNGs with the label name as suffix.\\n\\nWhen outputting indexed PNG files, the indices may not be consecutive.\\nThis can be fixed with the \\\"indexed-png-remap\\\" tool of this library:\\nhttps://github.com/waikato-datamining/indexed-png-stats" -error-handling ACTORS_DECIDE_TO_STOP_ON_ERROR -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.sink.ProgressBar -writer adams.gui.print.NullWriter -max @{max}
  adams.flow.source.SequenceSource -name "load report"
   adams.flow.source.Variable -var-name reportfile -conversion adams.data.conversion.StringToString
   adams.flow.transformer.ReportFileReader -reader adams.data.io.input.DefaultSimpleReportReader
 adams.flow.standalone.SetVariable -name "restoration file" -var-name restore_file -var-value @{flow_filename_long}.props -expand-value true
 adams.flow.source.Start
 adams.flow.control.Trigger -name "prompt user"
  adams.flow.source.EnterManyValues -stop-if-canceled true -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name image_dir -display \"Image directory\" -help \"Directory with images to annotate\" -type DIRECTORY_ABSOLUTE -default-value ${CWD}" -value "adams.flow.source.valuedefinition.ListSelectionValueDefinition -name file_format -display \"File format\" -help \"The file format to use for the annotations\" -value bluechannel -value grayscale -value indexed_png -value individual_layers -value individual_layers-replace_dominant -default-value individual_layers" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name labels -display Labels -help \"blank-separated list of labels\" -default-value object" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name skip_first_layer -display \"Implicit background (blue/gray)?\" -help \"if checked, layer with value 0 gets ignored and annotations get stored with index starting at 1\" -type BOOLEAN -default-value false" -value "adams.flow.source.valuedefinition.ListSelectionValueDefinition -name annotation_type -display \"Annotation type\" -value allow_multiple_annotations_per_pixel -value only_single_annotation_per_pixel -default-value allow_multiple_annotations_per_pixel" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name max_undo -display \"Max undo steps\" -help \"maximum number of undo steps to cache, CAUTION: retains copies of image in memory\" -type INTEGER -default-value 50" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name best_fit -display \"Best fit?\" -help \"Whether to fit the images into the available space.\" -type BOOLEAN -default-value false" -output-type MAP -restoration-enabled true -restoration-file @{restore_file}
  adams.flow.transformer.MapToVariables
  adams.flow.transformer.SetVariable -name use_separate_layers -var-name use_separate_layers -var-value "\\\"@{annotation_type}\\\" = \\\"allow_multiple_annotations_per_pixel\\\"" -value-type BOOL_EXPRESSION -expand-value true
 adams.flow.control.Trigger -name "process images"
  adams.flow.standalone.SetVariable -name "reset count" -var-name count -var-value 0
  adams.flow.source.FileSystemSearch -output-array true -search "adams.flow.source.filesystemsearch.LocalFileSearch -directory @{image_dir} -regexp .*\\\\.([jJ][pP][eE]?[gG]|[pP][nN][gG]) -sorting SORT_BY_NAME"
  adams.flow.transformer.SelectArraySubset -allow-search true
  adams.flow.control.Tee -name "# images"
   adams.flow.transformer.ArrayLength
   adams.flow.transformer.SetVariable -var-name max
  adams.flow.transformer.ArrayToSequence
  adams.flow.transformer.SetVariable -var-name file
  adams.flow.control.Tee -name progress
   adams.flow.transformer.IncVariable -var-name count -output-variable-value true
   adams.flow.sink.CallableSink -callable ProgressBar
  adams.flow.control.Switch -name load -condition "adams.flow.condition.bool.HasVariableValue -variable-name file_format -value bluechannel" -condition "adams.flow.condition.bool.HasVariableValue -variable-name file_format -value grayscale" -condition "adams.flow.condition.bool.HasVariableValue -variable-name file_format -value indexed_png" -condition "adams.flow.condition.bool.HasVariableValue -variable-name file_format -value individual_layers" -condition "adams.flow.condition.bool.HasVariableValue -variable-name file_format -value individual_layers-replace_dominant"
   adams.flow.transformer.ImageSegmentationFileReader -name bluechannel -reader "adams.data.io.input.BlueChannelImageSegmentationReader -skip-first-layer @{skip_first_layer} -layer-name @{labels} -lenient true -reader \"adams.data.io.input.PNGImageReader -color-provider adams.gui.visualization.core.DefaultColorProvider\""
   adams.flow.transformer.ImageSegmentationFileReader -name grayscale -reader "adams.data.io.input.GrayscaleImageSegmentationReader -skip-first-layer @{skip_first_layer} -layer-name @{labels} -lenient true -reader \"adams.data.io.input.PNGImageReader -color-provider adams.gui.visualization.core.DefaultColorProvider\""
   adams.flow.transformer.ImageSegmentationFileReader -name indexed_png -reader "adams.data.io.input.IndexedPNGImageSegmentationReader -layer-name @{labels} -lenient true"
   adams.flow.transformer.ImageSegmentationFileReader -name "individual layers- read as is" -reader "adams.data.io.input.IndividualImageSegmentationLayerReader -layer-transformer adams.data.image.transformer.PassThrough"
   adams.flow.transformer.ImageSegmentationFileReader -name "individual layers- replace predominant" -reader "adams.data.io.input.IndividualImageSegmentationLayerReader -layer-transformer adams.data.image.transformer.ReplacePredominantColor"
  adams.flow.transformer.ImageSegmentationAnnotator -name "Image segmentation" -short-title true -label @{labels} -color-provider adams.gui.visualization.core.DefaultColorProvider -max-undo @{max_undo} -best-fit @{best_fit} -use-separate-layers @{use_separate_layers} -layer-visibility PREVIOUSLY_VISIBLE -allow-layer-remove true -allow-layer-actions true
  adams.flow.control.Switch -name save -condition "adams.flow.condition.bool.HasVariableValue -variable-name file_format -value bluechannel" -condition "adams.flow.condition.bool.HasVariableValue -variable-name file_format -value grayscale" -condition "adams.flow.condition.bool.HasVariableValue -variable-name file_format -value indexed_png" -condition "adams.flow.condition.bool.HasVariableValue -variable-name file_format -value individual_layers" -condition "adams.flow.condition.bool.HasVariableValue -variable-name file_format -value individual_layers-replace_dominant"
   adams.flow.sink.ImageSegmentationFileWriter -name bluechannel -output @{file} -writer "adams.data.io.output.BlueChannelImageSegmentationWriter -skip-base-image true -layer-name @{labels} -implicit-background @{skip_first_layer}"
   adams.flow.sink.ImageSegmentationFileWriter -name grayscale -output @{file} -writer "adams.data.io.output.GrayscaleImageSegmentationWriter -skip-base-image true -layer-name @{labels} -implicit-background @{skip_first_layer}"
   adams.flow.sink.ImageSegmentationFileWriter -name indexed_png -output @{file} -writer "adams.data.io.output.IndexedPNGImageSegmentationWriter -skip-base-image true -layer-name @{labels} -color-provider adams.gui.visualization.core.DefaultColorProvider"
   adams.flow.sink.ImageSegmentationFileWriter -name "individual layers- read as is" -output @{file} -writer "adams.data.io.output.IndividualImageSegmentationLayerWriter -skip-base-image true -skip-empty-layers true"
   adams.flow.sink.ImageSegmentationFileWriter -name "individual layers- replace predominant" -output @{file} -writer "adams.data.io.output.IndividualImageSegmentationLayerWriter -skip-base-image true -skip-empty-layers true"
 adams.flow.control.CloseCallableDisplay -callable ProgressBar