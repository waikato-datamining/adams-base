# Project: adams
# Date: 2024-01-08 10:54:56
# User: fracpete
# Charset: UTF-8
# Modules: adams-core,adams-imaging,adams-json,adams-spreadsheet,adams-xml
#
adams.flow.control.Flow -annotation "Converts images from one format into another." -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.sink.ProgressBar -display-type adams.flow.core.displaytype.Default -writer adams.gui.print.NullWriter -max @{max}
 adams.flow.source.Start
 adams.flow.control.Trigger -name "prompt user"
  adams.flow.standalone.SetVariable -name "restore file" -var-name restore -var-value @{flow_filename_long}.props -value-type FILE_FORWARD_SLASHES -expand-value true
  adams.flow.source.EnterManyValues -name Parameters -stop-if-canceled true -value "adams.flow.source.valuedefinition.DirectoryValueDefinition -name input_dir -display \"Input dir\" -help \"the directory with the images to convert\" -file-chooser-title \"Input dir\" -use-forward-slashes true -use-absolute-path true" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name input_ext -display \"Input extension\" -help \"the extension of the images to look for; extension must include dot\" -default-value .png" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name select_subset -display \"Select subset?\" -help \"whether to let the user select a subset of the files\" -type BOOLEAN -default-value true" -value "adams.flow.source.valuedefinition.GOEValueDefinition -name input_reader -display \"Input reader\" -help \"the image reader to use for loading the images\" -super-class adams.data.io.input.ImageReader -default-class adams.data.io.input.JAIImageReader" -value "adams.flow.source.valuedefinition.DirectoryValueDefinition -name output_dir -display \"Output dir\" -help \"the directory to store the converted images in\" -file-chooser-title \"Output dir\" -use-forward-slashes true -use-absolute-path true" -value "adams.flow.source.valuedefinition.GOEValueDefinition -name output_writer -display \"Output writer\" -help \"the image writer to use for saving the images\" -super-class adams.data.io.output.ImageWriter -default-class adams.data.io.output.JAIImageWriter" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name output_ext -display \"Output extension\" -help \"the extension to use for the output images; empty uses same as input; extension must include dot\"" -output-type MAP -restoration-enabled true -restoration-file @{restore}
  adams.flow.transformer.MapToVariables
  adams.flow.transformer.SetVariable -var-name regexp -var-value .*@{input_ext} -expand-value true
 adams.flow.control.Trigger -name process
  adams.flow.standalone.SetVariable -var-name count -var-value 0
  adams.flow.source.FileSystemSearch -output-array true -search "adams.flow.source.filesystemsearch.LocalFileSearch -directory @{input_dir} -regexp @{regexp} -sorting SORT_BY_NAME" -use-forward-slashes true
  adams.flow.control.ConditionalSubProcess -name select? -condition "adams.flow.condition.bool.Expression -expression \"@{select_subset} = true\""
   adams.flow.transformer.SelectArraySubset -stop-if-canceled true -allow-search true -initial-selection first-last
  adams.flow.control.Tee -name "# images"
   adams.flow.transformer.ArrayLength
   adams.flow.transformer.SetVariable -var-name max
  adams.flow.transformer.ArrayToSequence
  adams.flow.control.Tee -name progress
   adams.flow.transformer.IncVariable -var-name count -output-variable-value true
   adams.flow.sink.CallableSink -callable ProgressBar
  adams.flow.control.Tee -name "output file"
   adams.flow.transformer.BaseName
   adams.flow.transformer.PrependDir -prefix @{output_dir} -use-forward-slashes true
   adams.flow.control.ConditionalSubProcess -name "custom ext?" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{output_ext}\\\\\\\" != \\\\\\\"\\\\\\\"\""
    adams.flow.transformer.Convert -conversion "adams.data.conversion.ReplaceFileExtension -extension @{output_ext} -use-forward-slashes true"
   adams.flow.transformer.SetVariable -var-name output_file
  adams.flow.transformer.ImageFileReader -reader @{input_reader} -meta-data-reader adams.data.io.input.DefaultSimpleReportReader
  adams.flow.sink.ImageFileWriter -output @{output_file} -writer @{output_writer}
 adams.flow.control.CloseCallableDisplay -callable ProgressBar