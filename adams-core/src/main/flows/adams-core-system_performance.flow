# Project: adams
# Date: 2024-01-08 15:47:43
# User: fracpete
# Charset: UTF-8
# Modules: adams-core
#
adams.flow.control.Flow -annotation "Uses flow components to give an overview of the system\\\'s performance." -error-handling ACTORS_DECIDE_TO_STOP_ON_ERROR -flow-execution-listener adams.flow.execution.NullListener
 adams.flow.standalone.GridView -name "System performance" -short-title true -x -2 -y -2 -num-rows 3 -writer adams.gui.print.NullWriter
  adams.flow.sink.SequencePlotter -name CPU -display-type adams.flow.core.displaytype.Default -writer adams.gui.print.NullWriter -paintlet "adams.gui.visualization.sequence.CirclePaintlet -meta-data-color adams.gui.visualization.sequence.metadatacolor.Dummy" -overlay-paintlet adams.gui.visualization.sequence.NullPaintlet -marker-paintlet adams.flow.sink.sequenceplotter.NoMarkers -error-paintlet adams.flow.sink.sequenceplotter.NoErrorPaintlet -mouse-click-action adams.flow.sink.sequenceplotter.NullClickAction -color-provider adams.gui.visualization.core.DefaultColorProvider -overlay-color-provider adams.gui.visualization.core.DefaultColorProvider -title CPU -axis-x "adams.gui.visualization.core.AxisPanelOptions -label evaluations -tick-generator adams.gui.visualization.core.axis.FancyTickGenerator -nth-value 2 -width 40 -custom-format 0" -axis-y "adams.gui.visualization.core.AxisPanelOptions -label msec -tick-generator adams.gui.visualization.core.axis.FancyTickGenerator -nth-value 2 -width 60 -top-margin 0.05 -bottom-margin 0.05 -custom-format 0" -plot-updater "adams.flow.sink.sequenceplotter.SimplePlotUpdater -update-interval @{cpu_plot_update}" -post-processor adams.flow.sink.sequenceplotter.PassThrough
  adams.flow.sink.SequencePlotter -name Write -writer adams.gui.print.NullWriter -paintlet "adams.gui.visualization.sequence.CirclePaintlet -meta-data-color adams.gui.visualization.sequence.metadatacolor.Dummy" -marker-paintlet adams.flow.sink.sequenceplotter.NoMarkers -error-paintlet adams.flow.sink.sequenceplotter.NoErrorPaintlet -mouse-click-action adams.flow.sink.sequenceplotter.NullClickAction -color-provider adams.gui.visualization.core.DefaultColorProvider -overlay-color-provider adams.gui.visualization.core.DefaultColorProvider -title Write -axis-x "adams.gui.visualization.core.AxisPanelOptions -label evaluations -tick-generator adams.gui.visualization.core.axis.FancyTickGenerator -nth-value 2 -width 40 -custom-format 0" -axis-y "adams.gui.visualization.core.AxisPanelOptions -label msec -tick-generator adams.gui.visualization.core.axis.FancyTickGenerator -nth-value 2 -width 60 -top-margin 0.05 -bottom-margin 0.05 -custom-format 0" -plot-updater "adams.flow.sink.sequenceplotter.SimplePlotUpdater -update-interval @{write_plot_update}" -post-processor adams.flow.sink.sequenceplotter.PassThrough
  adams.flow.sink.Display -name Overall -writer adams.data.io.output.NullWriter
 adams.flow.standalone.CallableActors
  adams.flow.control.Sequence -name timing_write
   adams.flow.control.ContainerValuePicker -value msec -switch-outputs true
   adams.flow.transformer.MakePlotContainer -plot-name "Write speed"
   adams.flow.sink.CallableSink -callable Write
  adams.flow.control.Sequence -name timing_cpuspeed
   adams.flow.control.ContainerValuePicker -value msec -switch-outputs true
   adams.flow.transformer.MakePlotContainer -plot-name "CPU Speed"
   adams.flow.sink.CallableSink -callable CPU
  adams.flow.control.Sequence -name timing_overall
   adams.flow.control.ContainerValuePicker -value msec
    adams.flow.transformer.SetVariable -var-name msec
   adams.flow.control.ContainerValuePicker -name ContainerValuePicker-1 -value Prefix
    adams.flow.transformer.SetVariable -var-name prefix
   adams.flow.control.Trigger -name "generate output"
    adams.flow.source.CombineVariables -expression "Overall @{prefix}: @{msec} msec" -conversion adams.data.conversion.StringToString
    adams.flow.sink.CallableSink -callable Overall
 adams.flow.standalone.Standalones -name "speed variables"
  adams.flow.standalone.SetVariable -name "# curves" -var-name num_curves -var-value 500
  adams.flow.standalone.SetVariable -name "# means" -var-name num_means -var-value 5
  adams.flow.standalone.SetVariable -name "# stdevs" -var-name num_stdevs -var-value 5
  adams.flow.standalone.SetVariable -name "# data points" -var-name num_points -var-value 200
  adams.flow.standalone.SetVariable -name "cpu plot update interval" -var-name cpu_plot_update -var-value 100
 adams.flow.standalone.Standalones -name "write variables"
  adams.flow.standalone.SetVariable -name "number of files" -var-name num_files -var-value 500
  adams.flow.standalone.SetVariable -name "number of numbers per file" -var-name num_rand -var-value 1000
  adams.flow.standalone.SetVariable -name "combine numbers" -var-name combine_numbers -var-value true
  adams.flow.standalone.SetVariable -name "output file" -var-name outfile -var-value ${TMP}/rand.txt
  adams.flow.standalone.SetVariable -name "write plot update interval" -var-name write_plot_update -var-value 100
 adams.flow.source.Start
 adams.flow.control.Trigger -name "prompt user"
  adams.flow.source.EnterManyValues -name "Enter parameters" -stop-if-canceled true -message "Please enter the performance test parameters" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name num_curves -display \"CPU: # curves\" -help \"The number of bell curves to calculate\" -type INTEGER -default-value @{num_curves}" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name num_means -display \"CPU: # means\" -help \"The number of different bell curve means to use in each iteration\" -type INTEGER -default-value @{num_means}" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name num_stdevs -display \"CPU: # standard deviations\" -help \"The number of different bell curve standard deviations to use in each iteration\" -type INTEGER -default-value @{num_stdevs}" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name num_points -display \"CPU: # data points\" -help \"The number of data points to calculate per bell curve\" -type INTEGER -default-value @{num_points}" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name cpu_plot_update -display \"CPU: plot update interval\" -help \"After how many iterations to refresh the plot\" -type INTEGER -default-value @{cpu_plot_update}" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name num_files -display \"Write: # files\" -help \"The number of files to generate\" -type INTEGER -default-value @{num_files}" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name num_rand -display \"Write: # random numbers per file\" -help \"How many random numbers to store in a single file\" -type INTEGER -default-value @{num_rand}" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name combine_numbers -display \"Write: single write operation per file\" -help \"Whether to save one number at a time or all at once\" -type BOOLEAN -default-value @{combine_numbers}" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name outfile -display \"Write: temporary file\" -help \"The temporary to use for saving the random numbers\" -type FILE_ABSOLUTE -default-value @{outfile}" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name write_plot_update -display \"Write: plot update interval\" -help \"After how many iterations to refresh the plot\" -type INTEGER -default-value @{write_plot_update}" -output-type KEY_VALUE_PAIRS
  adams.flow.control.Tee -name "output param"
   adams.flow.transformer.StringJoin -glue ": "
   adams.flow.sink.CallableSink -callable Overall
  adams.flow.control.Tee -name "var name"
   adams.flow.transformer.GetArrayElement
   adams.flow.transformer.SetVariable -var-name name
  adams.flow.control.Tee -name "var value"
   adams.flow.transformer.GetArrayElement -index 2
   adams.flow.transformer.SetVariable -var-name @{name}
 adams.flow.control.TimedTrigger -name speed -prefix CPU -callable timing_overall
  adams.flow.source.ForLoop -upper @{num_curves}
  adams.flow.control.TimedTrigger -name "calc curves" -callable timing_cpuspeed
   adams.flow.source.ForLoop -upper @{num_means}
   adams.flow.transformer.MathExpression -expression "X / @{num_means}"
   adams.flow.transformer.SetVariable -var-name mean
   adams.flow.control.Trigger -name mean
    adams.flow.source.ForLoop -upper @{num_stdevs}
    adams.flow.transformer.MathExpression -expression "X / @{num_stdevs}"
    adams.flow.transformer.SetVariable -var-name stdev
    adams.flow.control.Trigger -name stdev
     adams.flow.standalone.SetVariable -name "plot name" -var-name plot_name -var-value @{mean}/@{stdev} -expand-value true
     adams.flow.source.ForLoop -lower 0 -upper @{num_points}
     adams.flow.transformer.MathExpression -expression "(X - (@{num_points} / 2)) / 33"
     adams.flow.transformer.MathExpression -name MathExpression-1 -expression 1/sqrt(2*PI*pow(@{stdev},2))*exp(-1*pow(X-@{mean},2)/(2*@{stdev})) -output-value-pair true
 adams.flow.control.TimedTrigger -name write -prefix Write -callable timing_overall
  adams.flow.source.RandomNumberGenerator -generator adams.data.random.JavaRandomInt -max-num @{num_files}
  adams.flow.transformer.Convert -conversion "adams.data.conversion.MultiConversion -conversion adams.data.conversion.NumberToDouble -conversion \"adams.data.conversion.DoubleToString -num-decimals 0 -fixed-decimals true\""
  adams.flow.transformer.SetVariable -name "set seed" -var-name seed
  adams.flow.control.Trigger -name "delete file"
   adams.flow.source.Variable -var-name outfile -conversion adams.data.conversion.StringToString
   adams.flow.transformer.DeleteFile
  adams.flow.control.Trigger -name "generate random array"
   adams.flow.source.RandomNumberGenerator -generator "adams.data.random.JavaRandomDouble -seed @{seed}" -max-num @{num_rand}
   adams.flow.transformer.SequenceToArray -length @{num_rand}
   adams.flow.control.ArrayProcess
    adams.flow.transformer.Convert -conversion "adams.data.conversion.DoubleToString -num-decimals 6 -fixed-decimals true"
   adams.flow.control.TimedTee -callable timing_write
    adams.flow.control.IfThenElse -condition "adams.flow.condition.bool.Expression -expression (@{combine_numbers})"
     adams.flow.control.Sequence -name then
      adams.flow.transformer.StringJoin -glue \n
      adams.flow.sink.DumpFile -output ${HOME}/temp/rand.txt -append true
     adams.flow.control.Sequence -name else
      adams.flow.transformer.ArrayToSequence
      adams.flow.sink.DumpFile -output ${HOME}/temp/rand.txt -append true